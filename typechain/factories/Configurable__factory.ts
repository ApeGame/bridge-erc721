/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Configurable, ConfigurableInterface } from "../Configurable";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "getConfig",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "getConfig",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getConfig",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "setConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "setConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "setConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610a9b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638da5cb5b116100665780638da5cb5b1461011e5780638ec872e31461013c578063b21544f31461016c578063ddf2be3f14610188578063f2fde38b146101a457610093565b806315fe96dc1461009857806352665f47146100b45780636dd5b69d146100e4578063715018a614610114575b600080fd5b6100b260048036038101906100ad9190610724565b6101c0565b005b6100ce60048036038101906100c991906107c2565b61024a565b6040516100db9190610811565b60405180910390f35b6100fe60048036038101906100f9919061082c565b610286565b60405161010b9190610811565b60405180910390f35b61011c6102a3565b005b61012661032b565b6040516101339190610868565b60405180910390f35b61015660048036038101906101519190610724565b610355565b6040516101639190610811565b60405180910390f35b61018660048036038101906101819190610883565b61037b565b005b6101a2600480360381019061019d91906108d6565b610424565b005b6101be60048036038101906101b99190610929565b6104b7565b005b6101c86105ae565b73ffffffffffffffffffffffffffffffffffffffff166101e661032b565b73ffffffffffffffffffffffffffffffffffffffff161461023c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610233906109b3565b60405180910390fd5b61024682826105b6565b5050565b6000606560008373ffffffffffffffffffffffffffffffffffffffff168560001c1860001b815260200190815260200160002054905092915050565b600060656000838152602001908152602001600020549050919050565b6102ab6105ae565b73ffffffffffffffffffffffffffffffffffffffff166102c961032b565b73ffffffffffffffffffffffffffffffffffffffff161461031f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610316906109b3565b60405180910390fd5b61032960006105ed565b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060656000838560001c1860001b815260200190815260200160002054905092915050565b6103836105ae565b73ffffffffffffffffffffffffffffffffffffffff166103a161032b565b73ffffffffffffffffffffffffffffffffffffffff16146103f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ee906109b3565b60405180910390fd5b61041f8273ffffffffffffffffffffffffffffffffffffffff168460001c1860001b826105b6565b505050565b61042c6105ae565b73ffffffffffffffffffffffffffffffffffffffff1661044a61032b565b73ffffffffffffffffffffffffffffffffffffffff16146104a0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610497906109b3565b60405180910390fd5b6104b2828460001c1860001b826105b6565b505050565b6104bf6105ae565b73ffffffffffffffffffffffffffffffffffffffff166104dd61032b565b73ffffffffffffffffffffffffffffffffffffffff1614610533576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052a906109b3565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059990610a45565b60405180910390fd5b6105ab816105ed565b50565b600033905090565b806065600084815260200190815260200160002054146105e9578060656000848152602001908152602001600020819055505b5050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b6000819050919050565b6106cb816106b8565b81146106d657600080fd5b50565b6000813590506106e8816106c2565b92915050565b6000819050919050565b610701816106ee565b811461070c57600080fd5b50565b60008135905061071e816106f8565b92915050565b6000806040838503121561073b5761073a6106b3565b5b6000610749858286016106d9565b925050602061075a8582860161070f565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061078f82610764565b9050919050565b61079f81610784565b81146107aa57600080fd5b50565b6000813590506107bc81610796565b92915050565b600080604083850312156107d9576107d86106b3565b5b60006107e7858286016106d9565b92505060206107f8858286016107ad565b9150509250929050565b61080b816106ee565b82525050565b60006020820190506108266000830184610802565b92915050565b600060208284031215610842576108416106b3565b5b6000610850848285016106d9565b91505092915050565b61086281610784565b82525050565b600060208201905061087d6000830184610859565b92915050565b60008060006060848603121561089c5761089b6106b3565b5b60006108aa868287016106d9565b93505060206108bb868287016107ad565b92505060406108cc8682870161070f565b9150509250925092565b6000806000606084860312156108ef576108ee6106b3565b5b60006108fd868287016106d9565b935050602061090e8682870161070f565b925050604061091f8682870161070f565b9150509250925092565b60006020828403121561093f5761093e6106b3565b5b600061094d848285016107ad565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061099d602083610956565b91506109a882610967565b602082019050919050565b600060208201905081810360008301526109cc81610990565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610a2f602683610956565b9150610a3a826109d3565b604082019050919050565b60006020820190508181036000830152610a5e81610a22565b905091905056fea264697066735822122079f5bfae810e0559412806026cca5e377e517d70027c5955fca2ac4987eaaa3964736f6c634300080e0033";

export class Configurable__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Configurable> {
    return super.deploy(overrides || {}) as Promise<Configurable>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Configurable {
    return super.attach(address) as Configurable;
  }
  connect(signer: Signer): Configurable__factory {
    return super.connect(signer) as Configurable__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConfigurableInterface {
    return new utils.Interface(_abi) as ConfigurableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Configurable {
    return new Contract(address, _abi, signerOrProvider) as Configurable;
  }
}
