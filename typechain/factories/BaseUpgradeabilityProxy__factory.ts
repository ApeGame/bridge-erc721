/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BaseUpgradeabilityProxy,
  BaseUpgradeabilityProxyInterface,
} from "../BaseUpgradeabilityProxy";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x0004000000000002000000000301001900000060033002700000002d04300197000300000041035500020000000103550000002d0030019d000100000000001f0000008001000039000000400010043f0000000101200190000000390000c13d0000002f01000041000000000201041a0000000003000032000000410000c13d0000000001000414000000040320008c0000005f0000613d0000002d030000410000002d0410009c0000000001038019000000c00110021000af00aa0000040f0003000000010355000000000301001900000060043002700000001f0340018f0001002d0040019d0000002d044001970000000504400272000000280000613d00000000050000190000000506500210000000000761034f000000000707043b00000000007604350000000105500039000000000645004b000000210000413d000000000530004c000000360000613d00000003033002100000000504400210000000000504043300000000053501cf000000000535022f000000000141034f000000000101043b0000010003300089000000000131022f00000000013101cf000000000151019f00000000001404350000000101200190000000a40000c13d000000a70000013d0000000001000416000000000110004c0000007b0000c13d0000002001000039000001000010044300000120000004430000002e01000041000000b00001042e00000002010003670000001f0430018f00000005033002720000004d0000613d00000000050000190000000506500210000000000761034f000000000707043b00000000007604350000000105500039000000000635004b000000460000413d000000000540004c0000005b0000613d00000003044002100000000503300210000000000503043300000000054501cf000000000545022f000000000131034f000000000101043b0000010004400089000000000141022f00000000014101cf000000000151019f000000000013043500000000010000310000000003000414000000040420008c0000007d0000c13d000000030100036700000001020000310000001f0320018f00000005022002720000006c0000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000524004b000000650000413d000000000430004c000000a40000613d00000003033002100000000502200210000000000402043300000000043401cf000000000434022f000000000121034f000000000101043b0000010003300089000000000131022f00000000013101cf000000000141019f0000000000120435000000a40000013d0000000001000019000000b1000104300000002d040000410000002d0530009c0000000003048019000000c0033002100000006001100210000000000113001900af00aa0000040f0003000000010355000000000301001900000060043002700000001f0340018f0001002d0040019d0000002d044001970000000504400272000000940000613d00000000050000190000000506500210000000000761034f000000000707043b00000000007604350000000105500039000000000645004b0000008d0000413d000000000530004c000000a20000613d00000003033002100000000504400210000000000504043300000000053501cf000000000535022f000000000141034f000000000101043b0000010003300089000000000131022f00000000013101cf000000000151019f00000000001404350000000101200190000000a70000613d000000600100003900000001011001ff000000b00001042e000000600100003900000001011001ff000000b100010430000000ad002104250000000102000039000000000001042d0000000002000019000000000001042d000000af00000432000000b00001042e000000b1000104300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff00000002000000000000000000000000000000400000010000000000000000007050c9e0f4ca769c69bd3a8ef740bc37934f8e2c036e5a723fd8ee048ed3f8c370c2ab33167d0e80048aba610887835e2bd3f2730f3113f5342719e8f7befe85";

export class BaseUpgradeabilityProxy__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BaseUpgradeabilityProxy> {
    return super.deploy(overrides || {}) as Promise<BaseUpgradeabilityProxy>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BaseUpgradeabilityProxy {
    return super.attach(address) as BaseUpgradeabilityProxy;
  }
  connect(signer: Signer): BaseUpgradeabilityProxy__factory {
    return super.connect(signer) as BaseUpgradeabilityProxy__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BaseUpgradeabilityProxyInterface {
    return new utils.Interface(_abi) as BaseUpgradeabilityProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BaseUpgradeabilityProxy {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as BaseUpgradeabilityProxy;
  }
}
